// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of the expenses API.",
    "title": "Expenses",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/expenses": {
      "get": {
        "summary": "Get all expenses",
        "operationId": "Get expenses",
        "parameters": [
          {
            "type": "string",
            "description": "The earliest date to fetch expenses from",
            "name": "dateFrom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The latest date to fetch expenses from",
            "name": "dateTo",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Expenses"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/RouteError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Expense": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Expenses": {
      "type": "object",
      "required": [
        "count",
        "expenses"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "expenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expense"
          }
        }
      }
    },
    "RouteError": {
      "type": "object",
      "properties": {
        "err": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of the expenses API.",
    "title": "Expenses",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/expenses": {
      "get": {
        "summary": "Get all expenses",
        "operationId": "Get expenses",
        "parameters": [
          {
            "type": "string",
            "description": "The earliest date to fetch expenses from",
            "name": "dateFrom",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The latest date to fetch expenses from",
            "name": "dateTo",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Expenses"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/RouteError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Expense": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Expenses": {
      "type": "object",
      "required": [
        "count",
        "expenses"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "expenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expense"
          }
        }
      }
    },
    "RouteError": {
      "type": "object",
      "properties": {
        "err": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}
